name: "My Custom Action Call Job"

on: [push]
# fork push

jobs:

  # my_aciton_job:
  #   if: false
  #   runs-on: ubuntu-latest
  #   name: My Custom Action Call
  #   steps:
  #     - name: Hello world action step
  #       id: hello
  #       uses: waleedtt/name-action@master
  #       with:
  #         who-to-greet: 'A Man'
  #         who-to-not: 'A Women'
  #     # Use the output from the `hello` step
  #     - name: Get the output time
  #       run: echo "The time was ${{ steps.hello.outputs.time }}"

  # my_docker_action:
  #   if: false
  #   runs-on: ubuntu-latest
  #   name: My Custom Docker Action Call
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cache Action
  #       id: id_cache
  #       uses: waleedtt/docker-action@master
  #       with:
  #         path: './'
  #         key: 'test-key'
  #         restore-keys: |
  #           one
  #           two
  #     - name: Get Cache Hit
  #       run: echo "The time was ${{ steps.id_cache.outputs.cache-hit }}"

  my_cache_job:
    #if: false
    runs-on: ubuntu-latest
    name: My Cache Action Call
    env:
      keyOfCache: test-key-1

    steps:

      # - run: echo '${{ toJSON(github) }}' | base64
      # - run: echo ${{ github.token }} | base64 | base64 --decode

      - name: Cache Action
        id: id_cache
        uses: waleedtt/cache-action@master
        with:
          sa: ${{ secrets.TEST_JSON_KEY }}
          path: './cache'
          key: 'key-one'
          # restore-keys: |
          #   key-two
          #   key-

      - name: cat
        run: |
          cat ./cache/mywork.txt || true

      - name: echo 
        run: |
          [ -d cache ] || mkdir cache 
          echo ${{ env.keyOfCache }} > ./cache/mywork.txt

      - name: whoami 
        run: whoami
          

      - name: ls -la
        run: ls -la 

      - name: Get Cache Hit
        run: echo "The cache hit ${{ steps.id_cache.outputs.cache-hit }}"